/* ============================ 
  Media Queries
============================ */

@mixin breakpoint($point) {
  @if $point == xxlarge {
    @media only screen and (min-width: 90.063em) and (max-width: 120em) { @content; } /* min-width 1441px and max-width 1920px, use when QAing xlarge screen-only issues */
  }
  @else if $point == xlarge {
    @media only screen and (min-width: 90.063em) and (max-width: 120em) { @content; } /* min-width 1441px and max-width 1920px, use when QAing xlarge screen-only issues */
  }
  @else if $point == large {
    @media only screen and (min-width: 64.063em) and (max-width: 90em) { @content; } /* min-width 1025px and max-width 1440px, use when QAing large screen-only issues */
  }
  @else if $point == medium {
    @media only screen and (min-width: 40.063em) and (max-width: 64em) { @content; } /* min-width 641px and max-width 1024px, use when QAing tablet-only issues */
  }
  @else if $point == small {
    @media only screen and (max-width: 40em) { @content; } /* max-width 640px, mobile-only styles, use when QAing mobile issues */
  }
}

/* ============================ 
  Structure
============================ */

@mixin center($width: -100px, $height: -100px) {
  position: fixed;
  top: 50%;
  left: 50%;
  margin-top: $height;
  margin-left: $width;
}

//centering anything (known dimensions)

@mixin dead-center($width, $height) {
  margin-left: (-1 * $width/2);
  position: absolute;
  top: (-1 * $height/2);
  left: 50%;
  width: $width;
  visibility: visible;
}

@mixin vert-center($content-height) {
  position: absolute;
  top: (-1 * $content-height/2);
  visibility: visible;
}

//Centering Images

@mixin horizon() {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 0px;
  width: 100%;
  height: 1px;
  overflow: visible;
  visibility: visible;
  display: block;
}